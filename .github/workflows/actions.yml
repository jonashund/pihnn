name: actions

on:
  push:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"] #, "3.11", "3.12"]
        os: [ubuntu-latest] #, window-latest, macos-12]  # macos-latest doesn't have anaconda yet.
    
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup conda
        run: conda env create -f environment.yml

      - name: Install library
        run: $CONDA/envs/pihnn-env/bin/pip install .

      - name: Run laplace.py
        run: |
          $CONDA/envs/pihnn-env/bin/python3 examples/simply_connected/laplace.py
          mv results/loss.dat results/loss1.dat

      - name: Run quarter_ring.py
        run: |
          $CONDA/envs/pihnn-env/bin/python3 examples/simply_connected/quarter_ring.py
          mv results/loss.dat results/loss2.dat

      - name: Run quarter_plate_hole.py
        run: |
          $CONDA/envs/pihnn-env/bin/python3 examples/simply_connected/quarter_plate_hole.py
          mv results/loss.dat results/loss3.dat

      - name: Run laplace_dd.py
        run: | 
          $CONDA/envs/pihnn-env/bin/python3 examples/multiply_connected/laplace_dd.py
          mv results/loss.dat results/loss4.dat

      - name: Run plate_hole_dd.py
        run: | 
          $CONDA/envs/pihnn-env/bin/python3 examples/multiply_connected/plate_hole_dd.py
          mv results/loss.dat results/loss5.dat

      - name: Run straight_crack_williams.py
        run: | 
          $CONDA/envs/pihnn-env/bin/python3 examples/cracks/straight_crack_williams.py
          mv results/loss.dat results/loss6.dat

      - name: Run straight_crack_rice.py
        run: | 
          $CONDA/envs/pihnn-env/bin/python3 examples/cracks/straight_crack_rice.py
          mv results/loss.dat results/loss7.dat

      - name: Print tests results 
        run: |
          $CONDA/envs/pihnn-env/bin/python3 -c "
          import numpy
          exp = [1e-5, 1e-4, 5e-4, 2e-5, 1e-3, 1e-2, 1e-2]
          for i in range(1,8): loss = numpy.loadtxt('results/loss'+str(i)+'.dat'); print('Loss test ' + str(i) + ': ' + str(numpy.min(loss[:,1])) + ' (expected < ' + str(exp[i-1]) + ')')"